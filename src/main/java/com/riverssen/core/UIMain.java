package com.riverssen.core;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import com.riverssen.core.security.PubKey;
import com.riverssen.core.security.Wallet;
import com.riverssen.utils.HashUtil;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.*;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author Aboody
 */
public class UIMain extends JFrame implements Runnable
{

    /**
     * Creates new form UIMain
     */
    public UIMain()
    {
        initComponents();
    }

    private BufferedImage qrImage;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents()
    {
        setLocationRelativeTo(null);

        qrImage = new BufferedImage(512, 512, BufferedImage.TYPE_INT_ARGB);

        jTabbedPane1 = new JTabbedPane();
        jPanel1 = new JPanel();
        Start = new java.awt.Button();
        balance1 = new java.awt.Button();
        jPanel4 = new JPanel();
        jToggleButton3 = new JToggleButton();
        jLabel5 = new JLabel();
        transactionAmount = new JTextField();
        jLabel6 = new JLabel();
        transactionReceiverKey = new JTextField();
        jLabel7 = new JLabel();
        transactionComment = new JTextField();
        jLabel8 = new JLabel();
        bluetoothEnabled = new JCheckBox();
        jPanel2 = new JPanel();
        jSeparator1 = new JSeparator();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        walletName = new JTextField();
        walletSeed = new JTextField();
        walletPass = new JTextField();
        generateWallet = new JButton();
//        qrCodePanel = new JPanel()
//        {
//            @Override
//            public void paintComponents(Graphics g)
//            {
//                super.paintComponents(g);
//            }
//
//            @Override
//            protected void paintComponent(Graphics g)
//            {
//                super.paintComponent(g);
//            }
//
//            @Override
//            public void paint(Graphics g)
//            {
//                super.paint(g);
////                System.out.println("hello");
//                g.drawImage(qrImage, 0, 0, null);
//            }
//        };

        final String api = "https://api.qrserver.com/v1/create-qr-code/?size=512x512&data=" + RVCCore.get().getWallet().getPublicKey().getPublicAddress();

//        try
//        {
//            qrImage = ImageIO.read(new URL(api));
//        } catch (IOException e)
//        {
//            e.printStackTrace();
//        }

        qrCodePanel = new JLabel(new ImageIcon(qrImage));
        currentWalletName = new JLabel();
        currentWalletAddress = new JLabel();
        jToggleButton1 = new JToggleButton();
        jToggleButton2 = new JToggleButton();
        currentWalletAddress1 = new JLabel();
        jPanel3 = new JPanel();
        jMenuBar1 = new JMenuBar();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setForeground(java.awt.Color.black);

        Start.setActionCommand("startStop");
        Start.setBackground(new java.awt.Color(102, 255, 102));
        Start.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        Start.setLabel("Mine");
        Start.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                StartActionPerformed(evt);
            }
        });

        balance1.setActionCommand("BalanceCounter");
        balance1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        balance1.setLabel("0.0 RVC");

        balance1.addActionListener(new ActionListener()
        {
            @Override
            public void actionPerformed(ActionEvent e)
            {
//                balance1.setLabel(RVCCore.balance.toRiverCoinString());
            }
        });

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(Start, GroupLayout.PREFERRED_SIZE, 327, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(balance1, GroupLayout.PREFERRED_SIZE, 327, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(305, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                        .addComponent(balance1, GroupLayout.PREFERRED_SIZE, 163, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Start, GroupLayout.PREFERRED_SIZE, 163, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );

        jTabbedPane1.addTab("Home", jPanel1);

        jToggleButton3.setText("send funds");
        jToggleButton3.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                jToggleButton3ActionPerformed(evt);
            }
        });

        jLabel5.setText("new transaction");

        jLabel6.setText("amount");

        jLabel7.setText("receiver");

        jLabel8.setText("comment");

        bluetoothEnabled.setText("bluetooth");
        bluetoothEnabled.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                bluetoothEnabledActionPerformed(evt);
            }
        });

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(transactionAmount, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel6))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(transactionReceiverKey, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel7))
                                                .addGap(8, 8, 8)
                                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                                .addComponent(transactionComment, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(bluetoothEnabled))
                                                        .addComponent(jLabel8))))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(jToggleButton3)
                                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(transactionAmount, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jToggleButton3)))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(transactionComment, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(bluetoothEnabled)))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(transactionReceiverKey, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(404, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("transactions", jPanel4);

        jLabel1.setText("Wallet Settings");

        jLabel2.setText("wallet name");

        jLabel3.setText("wallet seed");

        jLabel4.setText("wallet pass");

        generateWallet.setText("generate");
        generateWallet.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                generateWalletActionPerformed(evt);
            }
        });

        GroupLayout qrCodePanelLayout = new GroupLayout(qrCodePanel);
        qrCodePanel.setLayout(qrCodePanelLayout);
        qrCodePanelLayout.setHorizontalGroup(
                qrCodePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 332, Short.MAX_VALUE)
        );
        qrCodePanelLayout.setVerticalGroup(
                qrCodePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 332, Short.MAX_VALUE)
        );

        currentWalletName.setText("current wallet:");

        currentWalletAddress.setText("address");

        jToggleButton1.setText("import");
        jToggleButton1.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("clear");
        jToggleButton2.addActionListener(new ActionListener()
        {
            public void actionPerformed(ActionEvent evt)
            {
                jToggleButton2ActionPerformed(evt);
            }
        });

        currentWalletAddress1.setText("funds:");

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel2)
                                                        .addComponent(walletName, GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                                                        .addComponent(walletSeed)
                                                        .addComponent(walletPass)))
                                        .addComponent(generateWallet))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 13, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(qrCodePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(currentWalletName)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jToggleButton1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jToggleButton2, GroupLayout.PREFERRED_SIZE, 63, GroupLayout.PREFERRED_SIZE))
                                        .addComponent(currentWalletAddress1)
                                        .addComponent(currentWalletAddress, GroupLayout.PREFERRED_SIZE, 371, GroupLayout.PREFERRED_SIZE))
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1, GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel2)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(walletName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel3)
                                                .addGap(1, 1, 1)
                                                .addComponent(walletSeed, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel4)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(walletPass, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(generateWallet))
                                        .addComponent(qrCodePanel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentWalletName)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentWalletAddress, GroupLayout.PREFERRED_SIZE, 14, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentWalletAddress1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(jToggleButton1)
                                        .addComponent(jToggleButton2))
                                .addContainerGap())
        );

        jTabbedPane1.addTab("Settings", jPanel2);

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 712, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 478, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("About", jPanel3);

        setJMenuBar(jMenuBar1);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane1)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane1)
                                .addContainerGap())
        );

        pack();
    }// </editor-fold>

    private void bluetoothEnabledActionPerformed(ActionEvent evt)
    {
        // TODO add your handling code here:

//        Main.bluetoothSpeakEnabled = !Main.bluetoothSpeakEnabled;
//
//        System.out.println(Main.COLOUR_YLW + "bluetooth speak: " + Main.bluetoothSpeakEnabled);
    }

    private void jToggleButton3ActionPerformed(ActionEvent evt)
    {
        // TODO add your handling code here:
        System.out.println("send funds");

//        TransactionI token = new TransactionI();
//
//        String sender = Util.publicKeyToAddress(myWallet.publicKey);
//        String receiver = Util.publicKeyToAddress(Main.DEFAULT.getPublic());//(transactionReceiverKey.getText());
//        RiverCoin amount = new RiverCoin(transactionAmount.getText());
//        String comment = transactionComment.getText();
//
//        token.transaction(sender, receiver, amount.toString().getBytes(), System.currentTimeMillis(), myWallet.privateKey, "0".getBytes(), comment);

//        for (int i = 0; i < Main.MAX_TOKENS_PER_MINE * 5; i++)
//        {
//            token = new TransactionI();
//            token.transaction(Util.publicKeyToAddress(myWallet.publicKey),
//                    Util.publicKeyToAddress(DEFAULT.getPublic()),
//                    new RiverCoin("10.0"/* + (int)(Math.random()*10.0)*/).toString().getBytes(),
//                    System.currentTimeMillis(), myWallet.privateKey,
//                    BigInteger.ZERO.toString().getBytes(), "hello");
////            System.out.println(COLOUR_WTE + token.toJSONFormat());
//
//            Main.newToken(token);
//
//            if (i % 1000 == 0)
//            {
//                System.out.println(getWalletBalance());
//            }
//            System.out.println(token.getSender().equals(Ragnarr.publicKey));
//            block.addToken(token);
//        }
    }

    private void generateWalletActionPerformed(ActionEvent evt)
    {
        // TODO add your handling code here:
        System.out.println("generate");
    }

    private void jToggleButton1ActionPerformed(ActionEvent evt)
    {
        // TODO add your handling code here:
//        System.out.println("import");
        JFileChooser chooser = new JFileChooser(new File(Config.getConfig().WALLET_DIRECTORY));

        chooser.showOpenDialog(null);

        File file = chooser.getSelectedFile();


        if(file != null)
        {
            String address = "";

            try{
//                BufferedReader reader = new BufferedReader(new FileReader(file));
//
//                String text = "";
//                String line = "";
//
//                while((line = reader.readLine()) != null) text += line + "\n";
//
//                address = text.split("\n")[1].trim();

                DataInputStream stream = new DataInputStream(new FileInputStream(file));

                byte key[] = new byte[stream.readShort()];

                stream.readShort();

                stream.read(key);

                address = HashUtil.base36Encode(key);
            } catch (Exception e)
            {
                e.printStackTrace();
            }

            PubKey publicKey = new PubKey(address);

            if(!publicKey.isValid()) return;

            final String api = "https://api.qrserver.com/v1/create-qr-code/?size=512x512&data=" + publicKey.getPublicAddress();

            BufferedImage image = null;

            try
            {
                image = ImageIO.read(new URL(api));
            } catch (IOException e)
            {
                e.printStackTrace();
            }

            if(image == null) return;

//            this.balance1.setLabel(RVCCore.balance.toRiverCoinString());
            RVCCore.get().setWallet(new Wallet(new PubKey(address)));

            qrCodePanel.setIcon(new ImageIcon(image));

            qrImage.setData(image.getData());
        }
    }

    private void jToggleButton2ActionPerformed(ActionEvent evt)
    {
        // TODO add your handling code here:
        System.out.println("clear");
    }

    private void StartActionPerformed(ActionEvent evt)
    {
        // TODO add your handling code here:
        System.out.println("mine");
    }

    public void main()
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        try
        {
            //</editor-fold>
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex)
        {
            Logger.getLogger(UIMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() ->
        {
            new UIMain().setVisible(true);
        });
    }

    // Variables declaration - do not modify                     
    private java.awt.Button Start;
    private java.awt.Button balance1;
    private JCheckBox bluetoothEnabled;
    private JLabel currentWalletAddress;
    private JLabel currentWalletAddress1;
    private JLabel currentWalletName;
    private JButton generateWallet;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel6;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JMenuBar jMenuBar1;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel4;
    private JSeparator jSeparator1;
    private JTabbedPane jTabbedPane1;
    private JToggleButton jToggleButton1;
    private JToggleButton jToggleButton2;
    private JToggleButton jToggleButton3;
    private JLabel qrCodePanel;
    private JTextField transactionAmount;
    private JTextField transactionComment;
    private JTextField transactionReceiverKey;
    private JTextField walletName;
    private JTextField walletPass;
    private JTextField walletSeed;

    @Override
    public void run()
    {
//        initComponents();
        main();

//        while(RVCCore.get().run())
//        {
//            repaint();
//            synchronized (this.balance1)
//            {
////                this.balance1.setLabel(RVCCore.balance.toRiverCoinString());
////
////                ActionListener listener[] =
////                this.balance1.getListeners(ActionListener.class);
////
////                listener[0].actionPerformed(new ActionEvent(this, 0, null));
//            }
//        }
    }
    // End of variables declaration                   
}
